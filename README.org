#+TITLE: Home configuration files
#+FILETAGS: #home infra configuration dotfiles

* What is ~home~
:PROPERTIES:
:CUSTOM_ID: h:0272c5ac-0b7f-4ebb-91f0-defa66c2d285
:END:

This repository is my dotfiles, using ~home-manager~, ~nix~, some shell script and maybe
sometimes ansible â€” especially on non-NixOS system.

The goal of is repository is to be able to have a way to setup dotfiles and packages in
/one go/, sharing those configuration between multiple computers. The documentation part
is using (or /will/) =org-mode= following principles of "literate programming": a
combination of ordinary language and inline code blocks.

This means it could become the /monorepo/ of my configuration, slowly migrating other
repositories into this one (like [[https://github.com/vdemeester/emacs-config][~emacs-config~]]). This repository should be the source of
truth of all my configuration.

On idea is also to try to do something like "[[https://willschenk.com/articles/2020/leveraging_disposability_for_exploration/][Leveraging disposability for exploration]]",
aka "how to play around without leaving a mess". I'll try my best to make everything
reproducible and easily testable without making /a mess/. Nix/NixOS should help with thatâ€¦

This will be a all-time work-in-progress, so please beware that things might change
dramatically or even not working anymore ðŸ˜›.

* Installation
:PROPERTIES:
:CUSTOM_ID: h:e289aa81-d0ec-49a0-ba94-933e85d4ee8c
:END:

You should be able to run the =bootstrap.sh= script as is. And if you feel adventurous,
you can use ~curl~ for this.

#+begin_src bash
curl https://gitlab.com/vdemeester/home/-/raw/master/bootstrap.sh | sh
#+end_src

Otherwise, clone this repository somewhere, read the =bootstrap.sh= file and execute it if
you feel safe

** ~home-manager~ only

If you don't have ~nix~ installed, run ~curl https://nixos.org/nix/install | sh~ to install it.

- clone this repository in ~$HOME/.config/nixpkgs~
- create a `home.nix` file with the content you want.
  Some machines files already exists that you can use :

  #+begin_src nix
    { pkgs, ... }:

    {
      imports = [
        ./machines/hokkaido.nix
      ];
    }
  #+end_src

- run ~nix-shell https://github.com/rycee/home-manager/archive/master.tar.gz -A install~ (maybe twice :D)
- run ~home-manager switch;~

** TODO ~nixos~ only

TBD: migrate ~nixos-configuration~ here.

* Organization of the repository
:PROPERTIES:
:CUSTOM_ID: h:b74304bf-e7e6-4425-9123-e50eca3eb8fa
:END:

This is probably gonna be a moving target, but this is how it looks (or should look
soon-ish ðŸ‘¼):

- ~assets~: ignored folder where my /automation/ puts some /secrets/.
  Most of the =make= commands will try to populate this ahead of time. The assumption is :
  have a ~sync~ folder where the assets are. /Note: how to bootstrap (as syncthing will
  not be there, and the ~sync~ folder either)/
- ~docs~: holds documentation about this code, literate configuration, see [[literate configuration][literate configuration]].
  =make publish= will publish the =README.org= and the =docs= folder to my website.
- ~lib~: shared code used during configuration (mostly ~nix~ code).
- ~machines~: configuration per machines
- ~modules~: holds nix modules (services, programs, hardware, profiles, â€¦)
- ~overlays~: holds [[https://nixos.wiki/wiki/Overlays][nix overlays]]
- ~pkgs~: holds nix packages (those should migrate under ~overlays~ or on ~nur-packages~)
- ~tmp~: things toâ€¦ organize (e.g. where I import my other /legacy/ configuration)

<<literate configuration>>As I'm slowly, but _surely_, going to have =org-mode= files for
literate configuration files in this repository, I have to think of how to organize files
in order to end up with one huge file. The goal of having those =org-mode= files, is
mainly to document my configuration and publish it, most likely on [[https://sbr.pm][sbr.pm]].

* References
:PROPERTIES:
:CUSTOM_ID: h:e5a95a68-f031-438b-831c-824803d0bc3e
:END:

Repositories
- [[https://github.com/akirak/nixos-config]]
- [[https://github.com/akirak/home.nix]]
- [[https://github.com/jwiegley/nix-config]]
- [[https://github.com/arianvp/nixos-stuff]]
- [[https://github.com/leotaku/nixos-config]]
- [[https://github.com/romatthe/ronix]]
- [[https://github.com/rummik/nixos-config]]
- [[https://git.tazj.in/about/]]
- [[https://github.com/a-schaefers/nix-config.old]]
- [[https://github.com/auntieNeo/nixrc]]
  + [[https://github.com/glines/nixrc]]
- [[https://github.com/therealpxc/pxc.nix.d]]
- [[https://github.com/tycho01/nix-config]]
- [[https://github.com/ghuntley/dotfiles-nixos]]
- [[https://github.com/budevg/nix-conf]]
- [[https://github.com/cleverca22/nixos-configs]]
- [[https://github.com/coreyoconnor/nix_configs]]
- [[https://github.com/danieldk/nix-home]]
- [[https://github.com/dejanr/dotfiles]]
- [[https://github.com/Ericson2314/nixos-configuration]]
- [[https://gitlab.com/garry-cairns/nixos-config]]
- [[https://github.com/grahamc/nixos-config]]
- [[https://github.com/HugoReeves/nix-home]]
- [[https://github.com/jwiegley/nix-config]]
- [[https://github.com/kampfschlaefer/nixconfig]]
- [[https://github.com/lambdael/nixosconf]]
- [[https://github.com/puffnfresh/nix-files]]
- [[https://github.com/talyz/nixos-config]]
- [[https://github.com/uwap/nixos-configs]]
- [[https://github.com/yacinehmito/yarn-nix]]
- [[https://github.com/yrashk/nix-home]]


* COPYING
:PROPERTIES:
:CUSTOM_ID: h:716e598e-3b1a-4e48-a72b-608c3a970db9
:END:

Copyright (c) 2018-2020 Vincent Demeester <vincent@sbr.pm>

This file is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at
your option) any later version.

This file is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this file.  If not, see <http://www.gnu.org/licenses/>.
