#!/usr/bin/env bash
# Update creds and link to the openshift4 devcluster

set -e

BASE_URL="https://osinstall.chmouel.com"
curl -s "${BASE_URL}/vincent/kubeadmin.password.gpg"|gpg --decrypt > ~/sync/work/chos4/kubeadmin.password.os4
curl -s "${BASE_URL}/vincent/webaccess.gpg"|gpg --decrypt > ~/sync/work/chos4/webaccess.os4
curl -s "${BASE_URL}/vincent/kubeconfig.gpg"|gpg --decrypt > ~/sync/work/chos4/config.os4 && export KUBECONFIG=~/sync/work/chos4/config.os4

for file in kubeadmin.password.os4 webaccess.os4 config.os4; do
    if test -d $HOME/.kube/$file; then
        ln -s $HOME/sync/work/chos4/$file ~/.kube/$file
    fi
done

export KUBECONFIG=~/.kube/config.os4
oc login -u kubeadmin -p $(cat ~/.kube/kubeadmin.password.os4)

echo ">>> scale machineset to 2"
for machineset in $(oc get machineset -n openshift-machine-api -o name); do
    oc scale --replicas=2 ${machineset} -n openshift-machine-api
done

echo ">>> install tekton in the cluster"
# This is needed when we want to test a non-released version
# cat <<EOF | oc apply -f-
# apiVersion: operators.coreos.com/v1
# kind: OperatorSource
# metadata:
#   name: sthaha-operators
#   namespace: openshift-marketplace
# spec:
#   type: appregistry
#   endpoint: https://quay.io/cnr
#   registryNamespace: sthaha
#   displayName: "Sunil Operators"
#   publisher: "Sunil Thaha"
# EOF
#
#sleep 10

cat <<EOF | oc apply -f-
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: pipelines
  namespace: openshift-operators
spec:
  channel: canary
  name: openshift-pipelines-operator
  source: community-operators
  sourceNamespace: openshift-marketplace
EOF

echo ">>> your cluster is ready :)"
read
